/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as UserInputsRouteImport } from './routes/user-inputs'
import { Route as SettingsRouteImport } from './routes/settings'
import { Route as RegistryRouteImport } from './routes/registry'
import { Route as RegisterRouteImport } from './routes/register'
import { Route as OrderTrackerRouteImport } from './routes/order-tracker'
import { Route as OnboardingRouteImport } from './routes/onboarding'
import { Route as MaterialFlowTracerRouteImport } from './routes/material-flow-tracer'
import { Route as MarketplaceRouteImport } from './routes/marketplace'
import { Route as LoginRouteImport } from './routes/login'
import { Route as InventoryTrackerRouteImport } from './routes/inventory-tracker'
import { Route as InventoryAndOrderTrackerRouteImport } from './routes/inventory-and-order-tracker'
import { Route as GreenCertificationsRouteImport } from './routes/green-certifications'
import { Route as FinancializationRouteImport } from './routes/financialization'
import { Route as DashboardRouteImport } from './routes/dashboard'
import { Route as BoundaryRouteImport } from './routes/boundary'
import { Route as IndexRouteImport } from './routes/index'
import { Route as MaterialIndexRouteImport } from './routes/material/index'
import { Route as VoluntaryPacmRouteImport } from './routes/voluntary/pacm'
import { Route as VoluntaryIncctsOffsetRouteImport } from './routes/voluntary/inccts-offset'
import { Route as MaterialNewRouteImport } from './routes/material/new'
import { Route as MaterialBatchIdRouteImport } from './routes/material/$batchId'
import { Route as InsetsProjectIdRouteImport } from './routes/insets/$projectId'
import { Route as CreditsOffsetRouteImport } from './routes/credits/offset'
import { Route as CreditsGrsRouteImport } from './routes/credits/grs'
import { Route as CreditsComplyRouteImport } from './routes/credits/comply'
import { Route as VoluntaryPrivateVerraRouteImport } from './routes/voluntary/private/verra'
import { Route as VoluntaryPrivateKlimadaoRouteImport } from './routes/voluntary/private/klimadao'
import { Route as VoluntaryPrivateGrsRouteImport } from './routes/voluntary/private/grs'
import { Route as VoluntaryPrivateGoldStandardRouteImport } from './routes/voluntary/private/gold-standard'
import { Route as VoluntaryPrivateAtlantisRouteImport } from './routes/voluntary/private/atlantis'

const UserInputsRoute = UserInputsRouteImport.update({
  id: '/user-inputs',
  path: '/user-inputs',
  getParentRoute: () => rootRouteImport,
} as any)
const SettingsRoute = SettingsRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any)
const RegistryRoute = RegistryRouteImport.update({
  id: '/registry',
  path: '/registry',
  getParentRoute: () => rootRouteImport,
} as any)
const RegisterRoute = RegisterRouteImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => rootRouteImport,
} as any)
const OrderTrackerRoute = OrderTrackerRouteImport.update({
  id: '/order-tracker',
  path: '/order-tracker',
  getParentRoute: () => rootRouteImport,
} as any)
const OnboardingRoute = OnboardingRouteImport.update({
  id: '/onboarding',
  path: '/onboarding',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialFlowTracerRoute = MaterialFlowTracerRouteImport.update({
  id: '/material-flow-tracer',
  path: '/material-flow-tracer',
  getParentRoute: () => rootRouteImport,
} as any)
const MarketplaceRoute = MarketplaceRouteImport.update({
  id: '/marketplace',
  path: '/marketplace',
  getParentRoute: () => rootRouteImport,
} as any)
const LoginRoute = LoginRouteImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryTrackerRoute = InventoryTrackerRouteImport.update({
  id: '/inventory-tracker',
  path: '/inventory-tracker',
  getParentRoute: () => rootRouteImport,
} as any)
const InventoryAndOrderTrackerRoute =
  InventoryAndOrderTrackerRouteImport.update({
    id: '/inventory-and-order-tracker',
    path: '/inventory-and-order-tracker',
    getParentRoute: () => rootRouteImport,
  } as any)
const GreenCertificationsRoute = GreenCertificationsRouteImport.update({
  id: '/green-certifications',
  path: '/green-certifications',
  getParentRoute: () => rootRouteImport,
} as any)
const FinancializationRoute = FinancializationRouteImport.update({
  id: '/financialization',
  path: '/financialization',
  getParentRoute: () => rootRouteImport,
} as any)
const DashboardRoute = DashboardRouteImport.update({
  id: '/dashboard',
  path: '/dashboard',
  getParentRoute: () => rootRouteImport,
} as any)
const BoundaryRoute = BoundaryRouteImport.update({
  id: '/boundary',
  path: '/boundary',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialIndexRoute = MaterialIndexRouteImport.update({
  id: '/material/',
  path: '/material/',
  getParentRoute: () => rootRouteImport,
} as any)
const VoluntaryPacmRoute = VoluntaryPacmRouteImport.update({
  id: '/voluntary/pacm',
  path: '/voluntary/pacm',
  getParentRoute: () => rootRouteImport,
} as any)
const VoluntaryIncctsOffsetRoute = VoluntaryIncctsOffsetRouteImport.update({
  id: '/voluntary/inccts-offset',
  path: '/voluntary/inccts-offset',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialNewRoute = MaterialNewRouteImport.update({
  id: '/material/new',
  path: '/material/new',
  getParentRoute: () => rootRouteImport,
} as any)
const MaterialBatchIdRoute = MaterialBatchIdRouteImport.update({
  id: '/material/$batchId',
  path: '/material/$batchId',
  getParentRoute: () => rootRouteImport,
} as any)
const InsetsProjectIdRoute = InsetsProjectIdRouteImport.update({
  id: '/insets/$projectId',
  path: '/insets/$projectId',
  getParentRoute: () => rootRouteImport,
} as any)
const CreditsOffsetRoute = CreditsOffsetRouteImport.update({
  id: '/credits/offset',
  path: '/credits/offset',
  getParentRoute: () => rootRouteImport,
} as any)
const CreditsGrsRoute = CreditsGrsRouteImport.update({
  id: '/credits/grs',
  path: '/credits/grs',
  getParentRoute: () => rootRouteImport,
} as any)
const CreditsComplyRoute = CreditsComplyRouteImport.update({
  id: '/credits/comply',
  path: '/credits/comply',
  getParentRoute: () => rootRouteImport,
} as any)
const VoluntaryPrivateVerraRoute = VoluntaryPrivateVerraRouteImport.update({
  id: '/voluntary/private/verra',
  path: '/voluntary/private/verra',
  getParentRoute: () => rootRouteImport,
} as any)
const VoluntaryPrivateKlimadaoRoute =
  VoluntaryPrivateKlimadaoRouteImport.update({
    id: '/voluntary/private/klimadao',
    path: '/voluntary/private/klimadao',
    getParentRoute: () => rootRouteImport,
  } as any)
const VoluntaryPrivateGrsRoute = VoluntaryPrivateGrsRouteImport.update({
  id: '/voluntary/private/grs',
  path: '/voluntary/private/grs',
  getParentRoute: () => rootRouteImport,
} as any)
const VoluntaryPrivateGoldStandardRoute =
  VoluntaryPrivateGoldStandardRouteImport.update({
    id: '/voluntary/private/gold-standard',
    path: '/voluntary/private/gold-standard',
    getParentRoute: () => rootRouteImport,
  } as any)
const VoluntaryPrivateAtlantisRoute =
  VoluntaryPrivateAtlantisRouteImport.update({
    id: '/voluntary/private/atlantis',
    path: '/voluntary/private/atlantis',
    getParentRoute: () => rootRouteImport,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/boundary': typeof BoundaryRoute
  '/dashboard': typeof DashboardRoute
  '/financialization': typeof FinancializationRoute
  '/green-certifications': typeof GreenCertificationsRoute
  '/inventory-and-order-tracker': typeof InventoryAndOrderTrackerRoute
  '/inventory-tracker': typeof InventoryTrackerRoute
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/material-flow-tracer': typeof MaterialFlowTracerRoute
  '/onboarding': typeof OnboardingRoute
  '/order-tracker': typeof OrderTrackerRoute
  '/register': typeof RegisterRoute
  '/registry': typeof RegistryRoute
  '/settings': typeof SettingsRoute
  '/user-inputs': typeof UserInputsRoute
  '/credits/comply': typeof CreditsComplyRoute
  '/credits/grs': typeof CreditsGrsRoute
  '/credits/offset': typeof CreditsOffsetRoute
  '/insets/$projectId': typeof InsetsProjectIdRoute
  '/material/$batchId': typeof MaterialBatchIdRoute
  '/material/new': typeof MaterialNewRoute
  '/voluntary/inccts-offset': typeof VoluntaryIncctsOffsetRoute
  '/voluntary/pacm': typeof VoluntaryPacmRoute
  '/material': typeof MaterialIndexRoute
  '/voluntary/private/atlantis': typeof VoluntaryPrivateAtlantisRoute
  '/voluntary/private/gold-standard': typeof VoluntaryPrivateGoldStandardRoute
  '/voluntary/private/grs': typeof VoluntaryPrivateGrsRoute
  '/voluntary/private/klimadao': typeof VoluntaryPrivateKlimadaoRoute
  '/voluntary/private/verra': typeof VoluntaryPrivateVerraRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/boundary': typeof BoundaryRoute
  '/dashboard': typeof DashboardRoute
  '/financialization': typeof FinancializationRoute
  '/green-certifications': typeof GreenCertificationsRoute
  '/inventory-and-order-tracker': typeof InventoryAndOrderTrackerRoute
  '/inventory-tracker': typeof InventoryTrackerRoute
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/material-flow-tracer': typeof MaterialFlowTracerRoute
  '/onboarding': typeof OnboardingRoute
  '/order-tracker': typeof OrderTrackerRoute
  '/register': typeof RegisterRoute
  '/registry': typeof RegistryRoute
  '/settings': typeof SettingsRoute
  '/user-inputs': typeof UserInputsRoute
  '/credits/comply': typeof CreditsComplyRoute
  '/credits/grs': typeof CreditsGrsRoute
  '/credits/offset': typeof CreditsOffsetRoute
  '/insets/$projectId': typeof InsetsProjectIdRoute
  '/material/$batchId': typeof MaterialBatchIdRoute
  '/material/new': typeof MaterialNewRoute
  '/voluntary/inccts-offset': typeof VoluntaryIncctsOffsetRoute
  '/voluntary/pacm': typeof VoluntaryPacmRoute
  '/material': typeof MaterialIndexRoute
  '/voluntary/private/atlantis': typeof VoluntaryPrivateAtlantisRoute
  '/voluntary/private/gold-standard': typeof VoluntaryPrivateGoldStandardRoute
  '/voluntary/private/grs': typeof VoluntaryPrivateGrsRoute
  '/voluntary/private/klimadao': typeof VoluntaryPrivateKlimadaoRoute
  '/voluntary/private/verra': typeof VoluntaryPrivateVerraRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/boundary': typeof BoundaryRoute
  '/dashboard': typeof DashboardRoute
  '/financialization': typeof FinancializationRoute
  '/green-certifications': typeof GreenCertificationsRoute
  '/inventory-and-order-tracker': typeof InventoryAndOrderTrackerRoute
  '/inventory-tracker': typeof InventoryTrackerRoute
  '/login': typeof LoginRoute
  '/marketplace': typeof MarketplaceRoute
  '/material-flow-tracer': typeof MaterialFlowTracerRoute
  '/onboarding': typeof OnboardingRoute
  '/order-tracker': typeof OrderTrackerRoute
  '/register': typeof RegisterRoute
  '/registry': typeof RegistryRoute
  '/settings': typeof SettingsRoute
  '/user-inputs': typeof UserInputsRoute
  '/credits/comply': typeof CreditsComplyRoute
  '/credits/grs': typeof CreditsGrsRoute
  '/credits/offset': typeof CreditsOffsetRoute
  '/insets/$projectId': typeof InsetsProjectIdRoute
  '/material/$batchId': typeof MaterialBatchIdRoute
  '/material/new': typeof MaterialNewRoute
  '/voluntary/inccts-offset': typeof VoluntaryIncctsOffsetRoute
  '/voluntary/pacm': typeof VoluntaryPacmRoute
  '/material/': typeof MaterialIndexRoute
  '/voluntary/private/atlantis': typeof VoluntaryPrivateAtlantisRoute
  '/voluntary/private/gold-standard': typeof VoluntaryPrivateGoldStandardRoute
  '/voluntary/private/grs': typeof VoluntaryPrivateGrsRoute
  '/voluntary/private/klimadao': typeof VoluntaryPrivateKlimadaoRoute
  '/voluntary/private/verra': typeof VoluntaryPrivateVerraRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/boundary'
    | '/dashboard'
    | '/financialization'
    | '/green-certifications'
    | '/inventory-and-order-tracker'
    | '/inventory-tracker'
    | '/login'
    | '/marketplace'
    | '/material-flow-tracer'
    | '/onboarding'
    | '/order-tracker'
    | '/register'
    | '/registry'
    | '/settings'
    | '/user-inputs'
    | '/credits/comply'
    | '/credits/grs'
    | '/credits/offset'
    | '/insets/$projectId'
    | '/material/$batchId'
    | '/material/new'
    | '/voluntary/inccts-offset'
    | '/voluntary/pacm'
    | '/material'
    | '/voluntary/private/atlantis'
    | '/voluntary/private/gold-standard'
    | '/voluntary/private/grs'
    | '/voluntary/private/klimadao'
    | '/voluntary/private/verra'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/boundary'
    | '/dashboard'
    | '/financialization'
    | '/green-certifications'
    | '/inventory-and-order-tracker'
    | '/inventory-tracker'
    | '/login'
    | '/marketplace'
    | '/material-flow-tracer'
    | '/onboarding'
    | '/order-tracker'
    | '/register'
    | '/registry'
    | '/settings'
    | '/user-inputs'
    | '/credits/comply'
    | '/credits/grs'
    | '/credits/offset'
    | '/insets/$projectId'
    | '/material/$batchId'
    | '/material/new'
    | '/voluntary/inccts-offset'
    | '/voluntary/pacm'
    | '/material'
    | '/voluntary/private/atlantis'
    | '/voluntary/private/gold-standard'
    | '/voluntary/private/grs'
    | '/voluntary/private/klimadao'
    | '/voluntary/private/verra'
  id:
    | '__root__'
    | '/'
    | '/boundary'
    | '/dashboard'
    | '/financialization'
    | '/green-certifications'
    | '/inventory-and-order-tracker'
    | '/inventory-tracker'
    | '/login'
    | '/marketplace'
    | '/material-flow-tracer'
    | '/onboarding'
    | '/order-tracker'
    | '/register'
    | '/registry'
    | '/settings'
    | '/user-inputs'
    | '/credits/comply'
    | '/credits/grs'
    | '/credits/offset'
    | '/insets/$projectId'
    | '/material/$batchId'
    | '/material/new'
    | '/voluntary/inccts-offset'
    | '/voluntary/pacm'
    | '/material/'
    | '/voluntary/private/atlantis'
    | '/voluntary/private/gold-standard'
    | '/voluntary/private/grs'
    | '/voluntary/private/klimadao'
    | '/voluntary/private/verra'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  BoundaryRoute: typeof BoundaryRoute
  DashboardRoute: typeof DashboardRoute
  FinancializationRoute: typeof FinancializationRoute
  GreenCertificationsRoute: typeof GreenCertificationsRoute
  InventoryAndOrderTrackerRoute: typeof InventoryAndOrderTrackerRoute
  InventoryTrackerRoute: typeof InventoryTrackerRoute
  LoginRoute: typeof LoginRoute
  MarketplaceRoute: typeof MarketplaceRoute
  MaterialFlowTracerRoute: typeof MaterialFlowTracerRoute
  OnboardingRoute: typeof OnboardingRoute
  OrderTrackerRoute: typeof OrderTrackerRoute
  RegisterRoute: typeof RegisterRoute
  RegistryRoute: typeof RegistryRoute
  SettingsRoute: typeof SettingsRoute
  UserInputsRoute: typeof UserInputsRoute
  CreditsComplyRoute: typeof CreditsComplyRoute
  CreditsGrsRoute: typeof CreditsGrsRoute
  CreditsOffsetRoute: typeof CreditsOffsetRoute
  InsetsProjectIdRoute: typeof InsetsProjectIdRoute
  MaterialBatchIdRoute: typeof MaterialBatchIdRoute
  MaterialNewRoute: typeof MaterialNewRoute
  VoluntaryIncctsOffsetRoute: typeof VoluntaryIncctsOffsetRoute
  VoluntaryPacmRoute: typeof VoluntaryPacmRoute
  MaterialIndexRoute: typeof MaterialIndexRoute
  VoluntaryPrivateAtlantisRoute: typeof VoluntaryPrivateAtlantisRoute
  VoluntaryPrivateGoldStandardRoute: typeof VoluntaryPrivateGoldStandardRoute
  VoluntaryPrivateGrsRoute: typeof VoluntaryPrivateGrsRoute
  VoluntaryPrivateKlimadaoRoute: typeof VoluntaryPrivateKlimadaoRoute
  VoluntaryPrivateVerraRoute: typeof VoluntaryPrivateVerraRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/user-inputs': {
      id: '/user-inputs'
      path: '/user-inputs'
      fullPath: '/user-inputs'
      preLoaderRoute: typeof UserInputsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/registry': {
      id: '/registry'
      path: '/registry'
      fullPath: '/registry'
      preLoaderRoute: typeof RegistryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/register': {
      id: '/register'
      path: '/register'
      fullPath: '/register'
      preLoaderRoute: typeof RegisterRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/order-tracker': {
      id: '/order-tracker'
      path: '/order-tracker'
      fullPath: '/order-tracker'
      preLoaderRoute: typeof OrderTrackerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/onboarding': {
      id: '/onboarding'
      path: '/onboarding'
      fullPath: '/onboarding'
      preLoaderRoute: typeof OnboardingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/material-flow-tracer': {
      id: '/material-flow-tracer'
      path: '/material-flow-tracer'
      fullPath: '/material-flow-tracer'
      preLoaderRoute: typeof MaterialFlowTracerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/marketplace': {
      id: '/marketplace'
      path: '/marketplace'
      fullPath: '/marketplace'
      preLoaderRoute: typeof MarketplaceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory-tracker': {
      id: '/inventory-tracker'
      path: '/inventory-tracker'
      fullPath: '/inventory-tracker'
      preLoaderRoute: typeof InventoryTrackerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/inventory-and-order-tracker': {
      id: '/inventory-and-order-tracker'
      path: '/inventory-and-order-tracker'
      fullPath: '/inventory-and-order-tracker'
      preLoaderRoute: typeof InventoryAndOrderTrackerRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/green-certifications': {
      id: '/green-certifications'
      path: '/green-certifications'
      fullPath: '/green-certifications'
      preLoaderRoute: typeof GreenCertificationsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/financialization': {
      id: '/financialization'
      path: '/financialization'
      fullPath: '/financialization'
      preLoaderRoute: typeof FinancializationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dashboard': {
      id: '/dashboard'
      path: '/dashboard'
      fullPath: '/dashboard'
      preLoaderRoute: typeof DashboardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/boundary': {
      id: '/boundary'
      path: '/boundary'
      fullPath: '/boundary'
      preLoaderRoute: typeof BoundaryRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/material/': {
      id: '/material/'
      path: '/material'
      fullPath: '/material'
      preLoaderRoute: typeof MaterialIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/pacm': {
      id: '/voluntary/pacm'
      path: '/voluntary/pacm'
      fullPath: '/voluntary/pacm'
      preLoaderRoute: typeof VoluntaryPacmRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/inccts-offset': {
      id: '/voluntary/inccts-offset'
      path: '/voluntary/inccts-offset'
      fullPath: '/voluntary/inccts-offset'
      preLoaderRoute: typeof VoluntaryIncctsOffsetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/material/new': {
      id: '/material/new'
      path: '/material/new'
      fullPath: '/material/new'
      preLoaderRoute: typeof MaterialNewRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/material/$batchId': {
      id: '/material/$batchId'
      path: '/material/$batchId'
      fullPath: '/material/$batchId'
      preLoaderRoute: typeof MaterialBatchIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/insets/$projectId': {
      id: '/insets/$projectId'
      path: '/insets/$projectId'
      fullPath: '/insets/$projectId'
      preLoaderRoute: typeof InsetsProjectIdRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/credits/offset': {
      id: '/credits/offset'
      path: '/credits/offset'
      fullPath: '/credits/offset'
      preLoaderRoute: typeof CreditsOffsetRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/credits/grs': {
      id: '/credits/grs'
      path: '/credits/grs'
      fullPath: '/credits/grs'
      preLoaderRoute: typeof CreditsGrsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/credits/comply': {
      id: '/credits/comply'
      path: '/credits/comply'
      fullPath: '/credits/comply'
      preLoaderRoute: typeof CreditsComplyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/private/verra': {
      id: '/voluntary/private/verra'
      path: '/voluntary/private/verra'
      fullPath: '/voluntary/private/verra'
      preLoaderRoute: typeof VoluntaryPrivateVerraRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/private/klimadao': {
      id: '/voluntary/private/klimadao'
      path: '/voluntary/private/klimadao'
      fullPath: '/voluntary/private/klimadao'
      preLoaderRoute: typeof VoluntaryPrivateKlimadaoRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/private/grs': {
      id: '/voluntary/private/grs'
      path: '/voluntary/private/grs'
      fullPath: '/voluntary/private/grs'
      preLoaderRoute: typeof VoluntaryPrivateGrsRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/private/gold-standard': {
      id: '/voluntary/private/gold-standard'
      path: '/voluntary/private/gold-standard'
      fullPath: '/voluntary/private/gold-standard'
      preLoaderRoute: typeof VoluntaryPrivateGoldStandardRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/voluntary/private/atlantis': {
      id: '/voluntary/private/atlantis'
      path: '/voluntary/private/atlantis'
      fullPath: '/voluntary/private/atlantis'
      preLoaderRoute: typeof VoluntaryPrivateAtlantisRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  BoundaryRoute: BoundaryRoute,
  DashboardRoute: DashboardRoute,
  FinancializationRoute: FinancializationRoute,
  GreenCertificationsRoute: GreenCertificationsRoute,
  InventoryAndOrderTrackerRoute: InventoryAndOrderTrackerRoute,
  InventoryTrackerRoute: InventoryTrackerRoute,
  LoginRoute: LoginRoute,
  MarketplaceRoute: MarketplaceRoute,
  MaterialFlowTracerRoute: MaterialFlowTracerRoute,
  OnboardingRoute: OnboardingRoute,
  OrderTrackerRoute: OrderTrackerRoute,
  RegisterRoute: RegisterRoute,
  RegistryRoute: RegistryRoute,
  SettingsRoute: SettingsRoute,
  UserInputsRoute: UserInputsRoute,
  CreditsComplyRoute: CreditsComplyRoute,
  CreditsGrsRoute: CreditsGrsRoute,
  CreditsOffsetRoute: CreditsOffsetRoute,
  InsetsProjectIdRoute: InsetsProjectIdRoute,
  MaterialBatchIdRoute: MaterialBatchIdRoute,
  MaterialNewRoute: MaterialNewRoute,
  VoluntaryIncctsOffsetRoute: VoluntaryIncctsOffsetRoute,
  VoluntaryPacmRoute: VoluntaryPacmRoute,
  MaterialIndexRoute: MaterialIndexRoute,
  VoluntaryPrivateAtlantisRoute: VoluntaryPrivateAtlantisRoute,
  VoluntaryPrivateGoldStandardRoute: VoluntaryPrivateGoldStandardRoute,
  VoluntaryPrivateGrsRoute: VoluntaryPrivateGrsRoute,
  VoluntaryPrivateKlimadaoRoute: VoluntaryPrivateKlimadaoRoute,
  VoluntaryPrivateVerraRoute: VoluntaryPrivateVerraRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
